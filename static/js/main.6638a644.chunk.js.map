{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","toLocaleTimeString","timerId","this","setInterval","date","setState","console","log","clockName","props","clearInterval","React","Component","App","clockVisible","showClock","hideClock","getRandomName","newName","String","Math","floor","random","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,sBAFrB,EAKEC,aALF,yDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,aAAY,WACzB,IAAMC,GAAe,IAAIL,MAAOC,qBAEhC,EAAKK,SAAS,CACZP,KAAMM,IAGRE,QAAQC,IAAIH,KACX,OAhBP,gCAmBE,YAAoD,IAA/BI,EAA8B,EAA9BA,UACfA,IAAcN,KAAKO,MAAMD,WAE3BF,QAAQC,IAAR,qCAA0CC,EAA1C,eAA0DN,KAAKO,MAAMD,cAtB3E,kCA0BE,WACMN,KAAKD,SACPS,cAAcR,KAAKD,WA5BzB,oBAgCE,WACE,OACE,qCACE,mDACkBC,KAAKO,MAAMD,aAE7B,oDACoBN,KAAKL,MAAMC,eAvCvC,GAA2Ba,IAAMC,WCDpBC,EAAb,4MACEhB,MAAQ,CACNW,UAAW,IACXM,cAAc,GAHlB,EAMEC,UAAY,WACV,EAAKV,SAAS,CACZS,cAAc,KARpB,EAYEE,UAAY,WACV,EAAKX,SAAS,CACZS,cAAc,KAdpB,EAkBEG,cAAgB,WACd,IAAMC,EAAUC,OAAOC,KAAKC,MAAsB,IAAhBD,KAAKE,WAEvC,EAAKjB,SAAS,CACZG,UAAWU,KAtBjB,4CA0BE,WACE,OACE,sBAAKK,UAAU,MAAf,UACE,6CAGA,wBAAQC,KAAK,SAASC,QAASvB,KAAKa,UAApC,wBAGA,wBAAQS,KAAK,SAASC,QAASvB,KAAKc,UAApC,wBAGA,wBAAQQ,KAAK,SAASC,QAASvB,KAAKe,cAApC,0BAGA,8BACGf,KAAKL,MAAMiB,cAAgB,cAAC,EAAD,CAAON,UAAWN,KAAKL,MAAMW,qBA1CnE,GAAyBG,IAAMC,WCN/Bc,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6638a644.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  clockName: string;\n};\n\ntype State = {\n  time: string,\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    time: new Date().toLocaleTimeString(),\n  };\n\n  timerId?: NodeJS.Timeout;\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      const date: string = new Date().toLocaleTimeString();\n\n      this.setState({\n        time: date,\n      });\n      // eslint-disable-next-line\n      console.log(date);\n    }, 1000);\n  }\n\n  componentDidUpdate({ clockName }: Readonly<Props>) {\n    if (clockName !== this.props.clockName) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${clockName} to ${this.props.clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timerId) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <h3>\n          {`Clock name: ${this.props.clockName}`}\n        </h3>\n        <p>\n          {`Current time: ${this.state.time}`}\n        </p>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\ntype State = {\n  clockName: string,\n  clockVisible: boolean,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    clockName: '0',\n    clockVisible: true,\n  };\n\n  showClock = () => {\n    this.setState({\n      clockVisible: true,\n    });\n  };\n\n  hideClock = () => {\n    this.setState({\n      clockVisible: false,\n    });\n  };\n\n  getRandomName = () => {\n    const newName = String(Math.floor(Math.random() * 100));\n\n    this.setState({\n      clockName: newName,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>\n          React clock\n        </h1>\n        <button type=\"button\" onClick={this.showClock}>\n          Show clock\n        </button>\n        <button type=\"button\" onClick={this.hideClock}>\n          Hide clock\n        </button>\n        <button type=\"button\" onClick={this.getRandomName}>\n          Rename clock\n        </button>\n        <div>\n          {this.state.clockVisible && <Clock clockName={this.state.clockName} />}\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}